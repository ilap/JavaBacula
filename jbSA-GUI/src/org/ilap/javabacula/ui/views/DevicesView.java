/*
 *  JavaBacula -- Java frontend of the BaculaÂ® - The Network Backup Solution
 *  Copyright (C) 2007 by Pal DOROGI
 * 
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by the
 *  Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *  See the GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, write to the Free Software Foundation, Inc.,
 *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 * 
 *  Contact:   Pal DOROGI
 *  mailto:    pal.dorogi@gmail.com
 * 
 *  $Id$
 */

package org.ilap.javabacula.ui.views;

import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.*;
import javax.swing.*;

import com.jgoodies.binding.adapter.AbstractTableAdapter;
import com.jgoodies.binding.adapter.SingleListSelectionAdapter;

import org.ilap.swing.components.CoolTableSelectionConverter;
import org.ilap.javabacula.model.BaculaObjectManagerModel;
import org.ilap.javabacula.ui.*;
import org.ilap.javabacula.model.StorageDaemon;
import org.ilap.javabacula.ui.model.*;

/**
 *
 * @author  ilap
 */
public class DevicesView extends BaculaView { 
    
    DeviceTableModel deviceTableModel;
    /** Creates new form DevicesView 
     * @param model 
     * @param tableModel 
     */
    public DevicesView(BaculaObjectManagerModel model, 
                                            AbstractTableAdapter tableModel) {
        initComponents();
        initializeView(model, tableModel);
    }

    public DevicesView(BaculaObjectManagerModel model, 
            AbstractTableAdapter tableModel, boolean wantButtons) {
        this(model, tableModel);
        this.wantButtons = wantButtons;
    }
    
    public void initializeView(BaculaObjectManagerModel model, 
                                            AbstractTableAdapter tableModel) {                
        
        this.model = model;

        storageTable.setModel(tableModel);
        storageTable.setSelectionModel(new SingleListSelectionAdapter(
 				new CoolTableSelectionConverter(
                                    this.model.getObjectsSelection().getSelectionIndexHolder(), 
                                storageTable)));

        storageTable.getColumn(0).setCellRenderer((TableCellRenderer) (new StatusStorageTableCellRenderer()));
        storageTable.addMouseListener(this.model.getDoubleClickHandler());

        SelectionListener listener = new SelectionListener();
        storageTable.getSelectionModel().addListSelectionListener(listener);
        storageTable.getColumnModel().getSelectionModel()
        .addListSelectionListener(listener);
        
        deviceTableModel = new DeviceTableModel(new StorageDaemon());        
        devicesTable.setModel(deviceTableModel);
        devicesTable.getColumn(0).setCellRenderer(new BaculaTableCellRenderer());
        devicesTable.getSelectionModel().addListSelectionListener(devicesTable);
    }
    
    
    public class SelectionListener implements ListSelectionListener {
        SelectionListener() {
        }
        public void valueChanged(ListSelectionEvent e) {
            int row = storageTable.getSelectedRow();
            if (row >= 0) {
                StorageDaemon sd = (StorageDaemon) storageTable.getValueAt(row, 0);
                deviceTableModel.setDevices(sd);
                devicesTable.packAll();
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        coolShadowPanel1 = new org.ilap.swing.components.CoolShadowPanel();
        coolButton1 = new org.ilap.swing.components.CoolButton();
        coolButton2 = new org.ilap.swing.components.CoolButton();
        coolButton3 = new org.ilap.swing.components.CoolButton();
        coolButton4 = new org.ilap.swing.components.CoolButton();
        coolButton5 = new org.ilap.swing.components.CoolButton();
        uIFSplitPane1 = new com.jgoodies.uif_lite.component.UIFSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        storageTable = new org.ilap.swing.components.CoolTable();
        storagePanel = new org.jdesktop.swingx.JXPanel();
        jSeparator1 = new javax.swing.JSeparator();
        storageLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        devicesTable = new org.ilap.swing.components.CoolTable();
        devicePanel = new org.jdesktop.swingx.JXPanel();
        jSeparator2 = new javax.swing.JSeparator();
        devicesLabel = new javax.swing.JLabel();

        coolButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ilap/javabacula/ui/resources/icons/mount_h22.png"))); // NOI18N
        coolButton1.setText("Mount");
        coolButton1.setSwapColor(true);
        coolButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonsActionPerformed(evt);
            }
        });

        coolButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ilap/javabacula/ui/resources/icons/umount_h22.png"))); // NOI18N
        coolButton2.setText("Umount");
        coolButton2.setSwapColor(true);
        coolButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonsActionPerformed(evt);
            }
        });

        coolButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ilap/javabacula/ui/resources/icons/release_h22.png"))); // NOI18N
        coolButton3.setText("Release");
        coolButton3.setSwapColor(true);
        coolButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonsActionPerformed(evt);
            }
        });

        coolButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ilap/javabacula/ui/resources/icons/label_h22.png"))); // NOI18N
        coolButton4.setText("Label");
        coolButton4.setSwapColor(true);
        coolButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonsActionPerformed(evt);
            }
        });

        coolButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ilap/javabacula/ui/resources/icons/relabel_h22.png"))); // NOI18N
        coolButton5.setText("Relabel");
        coolButton5.setSwapColor(true);
        coolButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout coolShadowPanel1Layout = new javax.swing.GroupLayout(coolShadowPanel1);
        coolShadowPanel1.setLayout(coolShadowPanel1Layout);
        coolShadowPanel1Layout.setHorizontalGroup(
            coolShadowPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coolShadowPanel1Layout.createSequentialGroup()
                .addComponent(coolButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coolButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coolButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coolButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coolButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(320, Short.MAX_VALUE))
        );
        coolShadowPanel1Layout.setVerticalGroup(
            coolShadowPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, coolShadowPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(coolButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(coolButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(coolButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(coolButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(coolButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        uIFSplitPane1.setBorder(null);
        uIFSplitPane1.setDividerSize(4);
        uIFSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        uIFSplitPane1.setOneTouchExpandable(true);

        storageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        storageTable.setName("storageTable"); // NOI18N
        jScrollPane1.setViewportView(storageTable);

        storagePanel.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator1.setForeground(new java.awt.Color(210, 210, 210));

        storageLabel.setText("Storages:");

        javax.swing.GroupLayout storagePanelLayout = new javax.swing.GroupLayout(storagePanel);
        storagePanel.setLayout(storagePanelLayout);
        storagePanelLayout.setHorizontalGroup(
            storagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
            .addGroup(storagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(storageLabel)
                .addContainerGap(500, Short.MAX_VALUE))
        );
        storagePanelLayout.setVerticalGroup(
            storagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(storagePanelLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(storageLabel)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
            .addComponent(storagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(storagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
        );

        uIFSplitPane1.setTopComponent(jPanel1);

        devicesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        devicesTable.setName("devicesTable"); // NOI18N
        jScrollPane2.setViewportView(devicesTable);

        devicePanel.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator2.setForeground(new java.awt.Color(210, 210, 210));

        devicesLabel.setText("Devices:");

        javax.swing.GroupLayout devicePanelLayout = new javax.swing.GroupLayout(devicePanel);
        devicePanel.setLayout(devicePanelLayout);
        devicePanelLayout.setHorizontalGroup(
            devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
            .addGroup(devicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(devicesLabel)
                .addContainerGap(505, Short.MAX_VALUE))
        );
        devicePanelLayout.setVerticalGroup(
            devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(devicePanelLayout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(devicesLabel)
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(devicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(devicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
        );

        uIFSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(coolShadowPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(uIFSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(coolShadowPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uIFSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void buttonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonsActionPerformed
    showDialog("Sorry! This function Not implemented at the moment!");
}//GEN-LAST:event_buttonsActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.ilap.swing.components.CoolButton coolButton1;
    private org.ilap.swing.components.CoolButton coolButton2;
    private org.ilap.swing.components.CoolButton coolButton3;
    private org.ilap.swing.components.CoolButton coolButton4;
    private org.ilap.swing.components.CoolButton coolButton5;
    private org.ilap.swing.components.CoolShadowPanel coolShadowPanel1;
    private org.jdesktop.swingx.JXPanel devicePanel;
    private javax.swing.JLabel devicesLabel;
    private org.ilap.swing.components.CoolTable devicesTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel storageLabel;
    private org.jdesktop.swingx.JXPanel storagePanel;
    private org.ilap.swing.components.CoolTable storageTable;
    private com.jgoodies.uif_lite.component.UIFSplitPane uIFSplitPane1;
    // End of variables declaration//GEN-END:variables

    public void initializeView() {}
    public void uninitializeView() {
    }

    public void doOnEnter() {
        storageTable.packAll();
        devicesTable.packAll();
    }
    public void doOnLeave() {}
    
    private  void showDialog(String message) {
        JOptionPane.showMessageDialog (this, message,
                                        "Restore - View",
                                        JOptionPane.INFORMATION_MESSAGE);
    }
}
