/*
 *  JavaBacula -- Java frontend of the BaculaÂ® - The Network Backup Solution
 *  Copyright (C) 2007 by Pal DOROGI
 * 
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by the
 *  Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *  See the GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, write to the Free Software Foundation, Inc.,
 *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 * 
 *  Contact:   Pal DOROGI
 *  mailto:    pal.dorogi@gmail.com
 * 
 *  $Id$
 */

package org.ilap.javabacula.ui.views;

import org.ilap.javabacula.ui.model.BaculaTableCellRenderer;
import javax.swing.table.*;

import com.jgoodies.binding.adapter.AbstractTableAdapter;
import com.jgoodies.binding.adapter.SingleListSelectionAdapter;

import org.ilap.swing.components.CoolTableSelectionConverter;
import org.ilap.javabacula.model.BaculaObjectManagerModel;
import org.ilap.javabacula.ui.*;

/**
 *
 * @author  ilap
 */
public class CommonTableView extends BaculaView {

    /**
     * Creates new form CommonTableView
     */
    public CommonTableView(BaculaObjectManagerModel model, 
                                            AbstractTableAdapter tableModel) {
        initComponents();
        initializeView(model, tableModel);
    }

    public CommonTableView(BaculaObjectManagerModel model, 
            AbstractTableAdapter tableModel, boolean wantButtons) {
        this(model, tableModel);
        this.wantButtons = wantButtons;
    }
    
    public void initializeView(BaculaObjectManagerModel model, 
                                            AbstractTableAdapter tableModel) {                
        
        this.model = model;

        commonTable.setModel(tableModel);
        commonTable.setSelectionModel(new SingleListSelectionAdapter(
 				new CoolTableSelectionConverter(
                                    this.model.getObjectsSelection().getSelectionIndexHolder(), 
                                commonTable)));

       // commonTable.getModel().s
        commonTable.getColumn(0).setCellRenderer((TableCellRenderer) (new BaculaTableCellRenderer()));
        commonTable.addMouseListener(model.getDoubleClickHandler());
   }
    
    public synchronized void initializeView() {
        model.startModel();
    }
    
    public synchronized void uninitializeView() {
        model.stopModel();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewScrollPane = new javax.swing.JScrollPane();
        commonTable = new org.ilap.swing.components.CoolTable();

        commonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        commonTable.setHorizontalScrollEnabled(true);
        viewScrollPane.setViewportView(commonTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.ilap.swing.components.CoolTable commonTable;
    private javax.swing.JScrollPane viewScrollPane;
    // End of variables declaration//GEN-END:variables

    
    public void doOnEnter() {
        model.startModel();
        commonTable.packAll();
    }

    public void doOnLeave() {
        // do nothing
    }
}
