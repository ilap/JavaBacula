/*
 *  JavaBacula -- Java frontend of the BaculaÂ® - The Network Backup Solution
 *  Copyright (C) 2007 by Pal DOROGI
 * 
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by the
 *  Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *  See the GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, write to the Free Software Foundation, Inc.,
 *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 * 
 *  Contact:   Pal DOROGI
 *  mailto:    pal.dorogi@gmail.com
 * 
 *  $Id$
 */

package org.ilap.javabacula.ui.dialogs;

import java.awt.event.*;
import java.text.*;

import javax.swing.*;
import javax.swing.text.NumberFormatter;
import javax.swing.text.DefaultFormatterFactory;

import org.jdesktop.swingx.*;

import com.jgoodies.binding.adapter.Bindings;
import com.jgoodies.binding.PresentationModel;

import org.ilap.swing.components.*;
import org.ilap.javabacula.model.BaculaSystem;
import org.ilap.javabacula.ui.util.SwingUtils;

/**
 *
 * @author  ilap
 */
public class SystemEditorDialog extends CoolDialog {

    /**
     * Holds the edited BaculaSystem
     */
    private final PresentationModel systemPresentationModel;

    /**
     * 
     * @see #hasBeenCanceled()
     */
    private Integer result = JOptionPane.CANCEL_OPTION;

    /**
     * Creates new form SystemEditorDialog
     */
    public SystemEditorDialog(java.awt.Frame parent, BaculaSystem system, 
                                                                String title) {       
        super(parent, true);
        initComponents();
        beautifyComponents();
        this.setTitle(title);
        
        
        systemPresentationModel = new PresentationModel(system);
        Bindings.bind(systemNameField, systemPresentationModel.
                getBufferedModel(BaculaSystem.PROPNAME_NAME));
        Bindings.bind(directorAddressField, systemPresentationModel.
                getBufferedModel(BaculaSystem.PROPNAME_DIRADDRESS));
        Bindings.bind(directorPortField, systemPresentationModel.
                getBufferedModel(BaculaSystem.PROPNAME_DIRPORT));
    }
    
    private void beautifyComponents() {
        DecimalFormat df = new DecimalFormat("#####");
        NumberFormatter nf = new NumberFormatter(df) {
            public String valueToString(Object iv) throws ParseException {
                if ((iv == null) || (((Integer)iv).intValue() == -1)) {
                    return "";
                } else {
                    return super.valueToString(iv);
                }
            }
            public Object stringToValue(String text) throws ParseException {
                if ("".equals(text)) {
                    return null;
                }
                return super.stringToValue(text);
            }
        };
    
        nf.setMinimum(0);
        nf.setMaximum(65534);
        nf.setValueClass(Integer.class);
        DefaultFormatterFactory factory = new DefaultFormatterFactory(nf);
        directorPortField.setColumns(5);
        directorPortField.setFormatterFactory(factory);
        
        SwingUtils.setToCenter(this);
    }
    


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jXPanel1 = new org.jdesktop.swingx.JXPanel();
        instructionLabel = new javax.swing.JLabel();
        sysNameLabel = new javax.swing.JLabel();
        dirAddresLabel = new javax.swing.JLabel();
        dirPortLAbel = new javax.swing.JLabel();
        systemNameField = new javax.swing.JTextField();
        directorAddressField = new javax.swing.JTextField();
        directorPortField = new javax.swing.JFormattedTextField();
        buttonPanel = new org.jdesktop.swingx.JXPanel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        coolHeader1 = new org.ilap.swing.components.CoolHeader();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jXPanel1.setBackground(new java.awt.Color(255, 255, 255));
        instructionLabel.setText("<html> Enter the common Bacula Backup System name and director address than specify the port number for it. If you don not specify the port number then the default value (9101) will be used. </html>");
        instructionLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        instructionLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 2, 2, 2));

        sysNameLabel.setText("System name:");

        dirAddresLabel.setText("Director address:");

        dirPortLAbel.setText("Director port:");

        systemNameField.setNextFocusableComponent(directorAddressField);

        directorAddressField.setNextFocusableComponent(directorPortField);

        directorPortField.setNextFocusableComponent(okButton);
        directorPortField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jXPanel1Layout = new javax.swing.GroupLayout(jXPanel1);
        jXPanel1.setLayout(jXPanel1Layout);
        jXPanel1Layout.setHorizontalGroup(
            jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jXPanel1Layout.createSequentialGroup()
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sysNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(dirPortLAbel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jXPanel1Layout.createSequentialGroup()
                                .addComponent(dirAddresLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jXPanel1Layout.createSequentialGroup()
                                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(systemNameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                    .addComponent(directorAddressField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                                .addGap(52, 52, 52))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jXPanel1Layout.createSequentialGroup()
                                .addComponent(directorPortField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addComponent(instructionLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)))
        );
        jXPanel1Layout.setVerticalGroup(
            jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXPanel1Layout.createSequentialGroup()
                .addComponent(instructionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sysNameLabel)
                    .addComponent(systemNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(directorAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dirAddresLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dirPortLAbel)
                    .addComponent(directorPortField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        buttonPanel.setBackground(new java.awt.Color(235, 235, 235));
        cancelButton.setText("Cancel");
        cancelButton.setDoubleBuffered(true);
        cancelButton.setNextFocusableComponent(systemNameField);
        cancelButton.setRolloverEnabled(true);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("Ok");
        okButton.setMaximumSize(new java.awt.Dimension(50, 22));
        okButton.setMinimumSize(new java.awt.Dimension(50, 22));
        okButton.setNextFocusableComponent(cancelButton);
        okButton.setRolloverEnabled(true);
        okButton.setSelected(true);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(210, 210, 210));

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap(191, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelButton)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        coolHeader1.setText("Bacula System");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(coolHeader1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
            .addComponent(jXPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(coolHeader1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jXPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if (isInvalidValuesInFields()) {
            showDialog("The \"System name\" or \"Director address\" can not be empty!");  
            repaint();
            validate();
            return;
        }
        
        if (directorPortField.getText().isEmpty()) {
            // Sets with default...
            directorPortField.setValue(9101);
        }
        
        systemPresentationModel.triggerCommit();
        result = JOptionPane.YES_OPTION;
        closeDialog(null);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        systemPresentationModel.triggerFlush();
        result = JOptionPane.CANCEL_OPTION;
        closeDialog(null);
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    /** Close dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {                             
        systemPresentationModel.setBean(null);
        setVisible(false);
        dispose();
    }                            
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private org.ilap.swing.components.CoolHeader coolHeader1;
    private javax.swing.JLabel dirAddresLabel;
    private javax.swing.JLabel dirPortLAbel;
    private javax.swing.JTextField directorAddressField;
    private javax.swing.JFormattedTextField directorPortField;
    private javax.swing.JLabel instructionLabel;
    private javax.swing.JSeparator jSeparator1;
    private org.jdesktop.swingx.JXPanel jXPanel1;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel sysNameLabel;
    private javax.swing.JTextField systemNameField;
    // End of variables declaration//GEN-END:variables
   
    /**
     * Gets the <strong>result/strong> of the Dialog.
     *
     * @return result Result of dialog
     */
    public boolean hasBeenCanceled() {
        return result == JOptionPane.CANCEL_OPTION;
    }  

    protected void onCancelKeyEvent(KeyEvent evt) {
        cancelButtonActionPerformed(null);
    }
    
    protected void onEnterKeyEvent(KeyEvent evt) {
        JComponent comp = (JComponent) (this.getFocusOwner());
        JComponent nextComp = (JComponent)(comp.getNextFocusableComponent());
        
        if (nextComp == null) {
            return;
        }
        
        if (comp != okButton) {
            nextComp.requestFocus();
        }
    }
    
    private boolean isInvalidValuesInFields() {
        boolean result = false;
        result =    directorAddressField.getText().isEmpty() ||
                    systemNameField.getText().isEmpty();
                
        return result;
    }

    private  void showDialog(String message) {
        JOptionPane.showMessageDialog (this, message,
                                        "System Editor Dialog",
                                        JOptionPane.ERROR_MESSAGE);
    }    
}
